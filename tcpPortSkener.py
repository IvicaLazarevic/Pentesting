#!/usr/bin/env python3

__coder__ = 'Ivica Lazarevic'
__scriptName__ = 'tcpPortSkener.py'
__version__ = '0.1'
__site__ = 'pythonbytes.rs'

import sys
import time
import argparse
import socket
from multiprocessing.dummy import Pool
from subprocess import call

try:
    from colorama import Fore
except:
    call('pip3 install colorama', shell=True)
    exit()


def logo():
    print(Fore.RED+"\n       __           __        ____      __        ")
    print(Fore.RED+"  ____/ /___ ______/ /_______/ __ \____/ /__  _____ ")
    print(Fore.RED+" / __  / __ `/ ___/ //_/ ___/ / / / __  / _ \/ ___/ ")
    print(Fore.RED+"/ /_/ / /_/ / /  / ,< / /__/ /_/ / /_/ /  __/ /     ")
    print(Fore.RED+"\__,_/\__,_/_/  /_/|_|\___/\____/\__,_/\___/_/      ")
    print(Fore.RED+"                                                \n")
    print(Fore.RED+'                               Naziv: '+ __scriptName__)
    print(Fore.RED+'                               Verzija: '+ __version__)
    print(Fore.RED+'                               Koder: '+ __coder__)
    print(Fore.RED+ '                               Sajt: ' + __site__+Fore.WHITE)

if sys.platform == 'linux' or sys.platform == 'linux2' or sys.platform == 'darwin':
    call('clear', shell=True)
    logo()
else:
    call('cls', shell=True)
    logo()

def skeniranje_portova(IP, POCETAK, KRAJ, PAUZA=2, PROCESI=10):

    def skeniranjeTCP(port):
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        s.settimeout(PAUZA)
        if s.connect_ex((IP, port)) == 0:
            print(f'[!] Otvoren TCP port: {port} Servis: {socket.getservbyport(port)}')
        s.close()

    pool = Pool(processes=PROCESI)
    pool.map(skeniranjeTCP, range(POCETAK, KRAJ + 1))
    pool.close()
    pool.join()


def argumenti():
    parser = argparse.ArgumentParser(description='Skeniranje TCP portova.')
    parser.add_argument('--ip', type=str, help='IP koji se skenira.')
    parser.add_argument('--pocetak', type=int, help='Pocetni port za skeniranje.', default=1)
    parser.add_argument('--kraj', type=int, help='Poslednji port za skeniranje.', default=1000)
    parser.add_argument('--pauza', type=int, help='Pauza u sekundama.', default=2)
    parser.add_argument('--procesi', type=int, help='Broj procesa.', default=10)
    return vars(parser.parse_args())


if __name__ == '__main__':
    start = time.perf_counter()
    argument = argumenti()
    print('\n[!] Skripta skenira TCP portove na zadatoj IP adresi!')
    print('[!] Koristiti na sopstvenu odgovornost!!')
    print(f'\n[+] IP za skeniranje: {argument["ip"]}')
    print(f'[+] Skeniraju se TCP portovi od {argument["pocetak"]} do {argument["kraj"]}.')
    print(f'[+] Broj procesa koji se koriste: {argument["procesi"]}\n')
    skeniranje_portova(argument['ip'], argument['pocetak'], argument['kraj'], argument['pauza'], argument['procesi'])
    kraj = time.perf_counter()
    print(f'\n[+] Skeniranje je trajalo {round(kraj-start, 2)} sekundi')